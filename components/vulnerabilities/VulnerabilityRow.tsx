import { Badge } from '@/components/ui/badge'
import {
  formatCurrency,
  formatDate,
  getBadgeVariantForExploitType,
  truncateString,
} from '@/lib/utils'
import { Vulnerability } from '@/types/markdown'

interface VulnerabilityRowProps {
  vulnerability: Vulnerability
  onView: () => void
}

const VulnerabilityRow = ({ vulnerability, onView }: VulnerabilityRowProps) => {
  const badgeVariant = getBadgeVariantForExploitType(vulnerability.exploitType)

  return (
    <tr
      className='hover:bg-accent vulnerability-card cursor-pointer'
      onClick={onView}
    >
      <td className='py-4 px-4 font-mono'>
        <div>
          <span className='font-semibold'>{vulnerability.protocol}</span>
          <span className='text-xs text-gray-400 block'>
            {vulnerability.protocolType}
          </span>
        </div>
      </td>
      <td className='py-4 px-4 font-mono text-sm'>
        {formatDate(vulnerability.exploitDate)}
      </td>
      <td className='py-4 px-4 font-mono text-sm'>
        {formatCurrency(vulnerability.amountStolen)}
      </td>
      <td className='py-4 px-4'>
        <Badge variant={badgeVariant}>{vulnerability.exploitType}</Badge>
      </td>
      <td className='py-4 px-4 text-sm text-gray-300 max-w-xs'>
        {truncateString(vulnerability.technique, 60)}
      </td>
      <td className='py-4 px-4 font-mono text-sm'>
        {vulnerability.auditor || 'N/A'}
      </td>
    </tr>
  )
}

export default VulnerabilityRow
