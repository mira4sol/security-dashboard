import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { colorMap } from '@/lib/utils'
import Chart from 'chart.js/auto'
import { useEffect, useRef } from 'react'

interface ExploitTypesChartProps {
  data: {
    type: string
    count: number
  }[]
}

const ExploitTypesChart = ({ data }: ExploitTypesChartProps) => {
  const chartRef = useRef<HTMLCanvasElement>(null)
  const chartInstance = useRef<Chart | null>(null)

  useEffect(() => {
    if (!chartRef.current || !data.length) return

    // Destroy existing chart
    if (chartInstance.current) {
      chartInstance.current.destroy()
    }

    const ctx = chartRef.current.getContext('2d')
    if (!ctx) return

    const labels = data.map((item) => item.type)
    const values = data.map((item) => item.count)
    const colors = data.map((item) => colorMap[item.type] || '#10B981')

    chartInstance.current = new Chart(ctx, {
      type: 'doughnut',
      data: {
        labels: labels,
        datasets: [
          {
            label: 'Exploit Types',
            data: values,
            backgroundColor: colors,
            borderWidth: 0,
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'right',
            labels: {
              color: '#94A3B8',
              font: {
                family: "'Inter', sans-serif",
                size: 12,
              },
              padding: 15,
            },
          },
        },
        cutout: '70%',
      },
    })

    return () => {
      if (chartInstance.current) {
        chartInstance.current.destroy()
      }
    }
  }, [data])

  return (
    <Card>
      <CardHeader className='pb-2'>
        <CardTitle className='text-base font-mono'>
          Exploit Types Distribution
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className='h-[280px] w-full'>
          <canvas ref={chartRef}></canvas>
        </div>
      </CardContent>
    </Card>
  )
}

export default ExploitTypesChart
